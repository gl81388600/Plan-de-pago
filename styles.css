document.getElementById('calculate-btn').addEventListener('click', () => {
  const loanAmount = parseFloat(document.getElementById('loan-amount').value);
  const annualRate = parseFloat(document.getElementById('interest-rate').value) / 100;
  const insuranceRate = parseFloat(document.getElementById('insurance-rate').value) / 100;
  const disbursementDate = new Date(document.getElementById('disbursement-date').value);
  const firstPaymentDate = new Date(document.getElementById('first-payment-date').value);
  const termMonths = parseInt(document.getElementById('term-months').value);

  const tableBody = document.querySelector('#amortization-table tbody');
  tableBody.innerHTML = ''; // Clear previous table

  let balance = loanAmount;
  const monthlyPayment = loanAmount / termMonths;

  for (let month = 1; month <= termMonths; month++) {
    const paymentDate = new Date(firstPaymentDate);
    paymentDate.setMonth(firstPaymentDate.getMonth() + month - 1);

    const daysBetweenPayments = (paymentDate - disbursementDate) / (1000 * 60 * 60 * 24);

    const insurance = Math.max(balance * insuranceRate, 2);
    const interest = (balance * annualRate * daysBetweenPayments) / 365;
    const totalPayment = monthlyPayment + insurance + interest;

    balance -= monthlyPayment;

    const row = `
      <tr>
        <td>${month}</td>
        <td>${paymentDate.toISOString().split('T')[0]}</td>
        <td>${Math.round(daysBetweenPayments)}</td>
        <td>${balance.toFixed(2)}</td>
        <td>${monthlyPayment.toFixed(2)}</td>
        <td>${insurance.toFixed(2)}</td>
        <td>${interest.toFixed(2)}</td>
        <td>${totalPayment.toFixed(2)}</td>
        <td>${balance.toFixed(2)}</td>
      </tr>
    `;
    tableBody.innerHTML += row;
  }
});
